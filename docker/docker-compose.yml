## Run compose               : docker-compose up -d 
## Check for typos           : docker-compose config 
## Cleanup unused images etc : sudo docker system prune --all --volumes --force
### Note this will delete stopped containers and everything linked to them.  
#  
# CHANGELOG 2021-04-28
## CHANGED: VPN-proxy back to Frankfurt, for some reason Swiss doesn't work, the server TLS certificate is outdated. 
## REPLACED IMAGE: QBittorrent image with the one from Hotio because it has unrar and doesn't create files with root-only access.
## REPLACED ALL MEDIA RELATED IMAGES: all images are now from Hotio.
## CHANGED: Watchtower variables + added labels to all containers to get notified of updates, without updating them automatically. 
## CHANGED: Watchtower will update automatically containers that miss the label, currently only Jackett/Sonarr/Radarr/Lidarr/Bazarr. 
## CHANGED: Scrutiny requires a yaml config file to recognise NVME drives. see my github for an example. 
## CHANGED: Ports of VPN-proxy to allow access to QBittorrent as it listens on a different port for the webUI.  
#
# CHANGELOG 2021-04-13
## ADDED Guacamole! Now you can open your browser and access the desktop of your server. The image works, still have to test Guacamole. 
## Removed Transmission as nobody seems to use it anymore, even though it had full Sonarr compatibility, it is riddled with config issues:
## temp folder will never be used with Sonarr/Radarr, making the filesystem optimisations (disabling CoW & seperate subvolume for incomplete dir)
## Completely useless, allowing fragmentation. Also, the complete dir is changed during downloading via Sonarr. Devs believe this is all normal behaviour.
## ADDED QBittorrent, not from Linuxserver as it is 360MB versus this 150MB image. 
## ToDO: Will look into using Hotio QFlood image instead, the UI is much nicer but seems to lack important settings to increase disk cache etc.
## REMOVED unneccessary port binds: 80 for Caddy is not used. Now used for Organizr to access server homepage via url (use your servers /etc/hosts file to set an url). 
## ToDO: Will look into registering https for LAN only, to access all services via https organizr url (not sure if it makes sense to go this far). 
## CHANGED: pia wireguard vpn to swiss instead of nine eyes Germany.
## NOTE: I stopped using Syncthing due to this issue (my laptop SSD filled up within 30min): https://forum.syncthing.net/t/problems-with-renamed-directory/16611
## I might try Resilio instead or see if the dev is helpful to figure out the issue, if it isn't "by design".
#
version: "2.3"
## Read the Docker Documentation! Most examples use 3.x. Docker-Compose 3.x is for Docker Swarm, NOT Compose. Do not use Swarm.
## Docker-Compose 2.x is for Compose.
services:
##
##_____MANAGEMENT_____
##____________________ Portainer [Management/Docker]
  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    restart: always
    networks: 
      - management
    command: -H unix:///var/run/docker.sock
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $DOCKERDIR/portainer/data:/data
    labels: 
      com.centurylinklabs.watchtower.monitor-only: 'true'
##____________________ Watchtower [Management/Updates]
  watchtower:
    container_name: watchtower
    image: containrrr/watchtower
    restart: always
    networks: 
      - management
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      TZ: $TZ
      WATCHTOWER_SCHEDULE: "0 0 * * 7" #  every sunday at midnight, see https://crontab.guru
      WATCHTOWER_CLEANUP: 'true'
      WATCHTOWER_LABEL_ENABLE: 'true'
      WATCHTOWER_NOTIFICATIONS: email
      WATCHTOWER_NOTIFICATION_EMAIL_FROM: $EMAIL
      WATCHTOWER_NOTIFICATION_EMAIL_TO: $RECIPIENT
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER: $SMTP
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PORT: 587
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER_USER: $SMTPUSER
      WATCHTOWER_NOTIFICATION_EMAIL_SERVER_PASSWORD: $SMTPPASS
      WATCHTOWER_NOTIFICATION_EMAIL_DELAY: 2

##_____________________ Heimdall [Management/HOMEPAGE] 
  organizr:
    container_name: organizr
    image: organizr/organizr:latest
    restart: always
    networks: 
      - management
    security_opt:
      - no-new-privileges:true
    ports:
     - "80:80"
    volumes:
      - $DOCKERDIR/organizr:/config
    environment:
      fpm: 'true'
    labels: 
      com.centurylinklabs.watchtower.monitor-only: 'true'
##
##____________________ Guacamole [Management/remote-desktop]
  guacamole:
    container_name: guacamole
    image: oznu/guacamole
    restart: always
    networks: 
      - management
    ports:
     - "8000:8080"
    volumes:
      - $DOCKERDIR/guacamole:/config
    environment:
      EXTENSIONS: auth-quickconnect # add ,auth-totp if exposed to the internet, for 2FA
    labels: 
      com.centurylinklabs.watchtower.monitor-only: 'true'
##
##____________________ Scrutiny [Management/monitoring]
  scrutiny:
    container_name: scrutiny
    image: hotio/scrutiny
    restart: always
    cap_add:
      - SYS_RAWIO
      - SYS_ADMIN
    devices:
      - "/dev/nvme0n1"
      - "/dev/nvme1n1"
      - "/dev/sda"
      - "/dev/sdb"
      - "/dev/sdc"
      - "/dev/sdd"
      - "/dev/sde" 
    networks: 
      - management
    environment: 
      PUID: $PUID
      PGID: $PGID
      UMASK: 002
      TZ: $TZ
    ports:
      - "8001:8080"
    volumes:
      - /run/udev:/run/udev:ro
      - $DOCKERDIR/scrutiny/config:/config
    labels: 
      com.centurylinklabs.watchtower.monitor-only: 'true'
##
##
##______NETWORK_______
##____________________ AdGuard Home [NETWORK/noads-dnsserver]
  adguard:
    container_name: adguard-home
    image: adguard/adguardhome
    restart: always
    network_mode: host
    volumes:
       - $DOCKERDIR/adguardhome/work:/opt/adguardhome/work
       - $DOCKERDIR/adguardhome//conf:/opt/adguardhome/conf
    labels: 
      com.centurylinklabs.watchtower.monitor-only: 'true'
##____________________ Unbound [NETWORK/noads-dnsserver]
  unbound:
    container_name: unbound
    image: mvance/unbound:latest
    restart: always
    networks: 
      - management  
    volumes:
      - $DOCKERDIR/unbound/forward-records.conf:/opt/unbound/etc/unbound/forward-records.conf
    ports:
      - 5335:53/tcp
      - 5335:53/udp
    labels: 
      com.centurylinklabs.watchtower.monitor-only: 'true'
##
##____________________ Unifi Controller [NETWORK/Wifi]
  unifi:
    container_name: unifi
    image: ghcr.io/linuxserver/unifi-controller
    #mac_address: d0:ca:ab:cd:ef:03
    restart: always
    networks: 
      - management
    environment:
      PUID: $PUID
      PGID: $PGID
      MEM_LIMIT: 512M #optional
    volumes:
      - $DOCKERDIR/unifi/config:/config
    ports:
      - 10001:10001/udp #to auto-discover your Access Points
      - 8080:8080 # Controller communication with Access Points and vice versa
      - 8443:8443 #to access webUI
      - 1900:1900/udp #to auto-discover this Controller in your app
    labels: 
      com.centurylinklabs.watchtower.monitor-only: 'true'
##
##
##________CLOUD________
##_____________________ Caddy [CLOUD/web-proxy]
  caddy:
    container_name: caddy-proxy
    image: lucaslorentz/caddy-docker-proxy:ci-alpine
    restart: always
    networks: 
      - web-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $DOCKERDIR/caddy/caddy_data:/data
      - $DOCKERDIR/caddy/config:/config
    ports:
      - 443:443
    labels:
      caddy.email: $EMAIL
      caddy.log: ""
      #caddy.log.output: file /data/access.log
      com.centurylinklabs.watchtower.monitor-only: 'true'
##_____________________ Firefox Sync [CLOUD/Browser] 
# generate secret.txt first see docker-config.sh
  firefox-syncserver:
    image: crazymax/firefox-syncserver:latest
    container_name: firefox_syncserver
    restart: always
    networks: 
      - web-proxy
    environment: 
      FF_SYNCSERVER_PUBLIC_URL: firefox.$DOMAIN
      FF_SYNCSERVER_SECRET: $FFSYNCSECRET
      FF_SYNCSERVER_FORWARDED_ALLOW_IPS: '*'
      FF_SYNCSERVER_FORCE_WSGI_ENVIRON: 'true'
      FF_SYNCSERVER_ALLOW_NEW_USERS: 'true'
      FF_SYNCSERVER_LOGLEVEL: debug
      FF_SYNCSERVER_ACCESSLOG: 'true'
    volumes:
      - $DOCKERDIR/firefox-syncserver:/data
    labels:
      caddy: firefox.$DOMAIN
      caddy.reverse_proxy: "{{upstreams 5000}}"
      com.centurylinklabs.watchtower.monitor-only: 'true'
##_____________________ Bitwarden [CLOUD/Password-manager] 
  bitwarden:
    image: bitwardenrs/server:latest
    container_name: bitwarden
    restart: always
    networks: 
      - web-proxy
    volumes:
      - $DOCKERDIR/bitwarden:/data
    environment:
      WEBSOCKET_ENABLED: 'true'
      DOMAIN: bw.$DOMAIN
      SIGNUPS_ALLOWED: 'false'
      ADMIN_TOKEN: $BITWARDENTOKEN
    labels:
      caddy: bw.$DOMAIN
      caddy.reverse_proxy_0: "{{upstreams 80}}"
      # Required extra headers
      caddy.encode: gzip
      caddy.header.X-XSS-Protection: '"1; mode=block;"'
      caddy.header.X-Frame-Options: "DENY"
      caddy.header.X-Content-Type-Options: "none"
      caddy.reverse_proxy_1: "/notifications/hub/negotiate {{upstreams 80}}"
      caddy.reverse_proxy_2: "/notifications/hub {{upstreams 3012}}"
      com.centurylinklabs.watchtower.monitor-only: 'true'
##
##____________________ Syncthing [CLOUD/Sync]
  syncthing:
    container_name: syncthing
    image: ghcr.io/linuxserver/syncthing
    restart: 'no'
    networks: 
      - web-proxy
    hostname: Obelix
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
    volumes:
      - $DOCKERDIR/syncthing/config:/config
      - $DATAPOOL/Users:/Users
    ports:
      #- "8384:8384"
      - "22000:22000/tcp"
      - "22000:22000/udp"
    labels:
      caddy: sync.$DOMAIN
      caddy.reverse_proxy: "{{upstreams 8384}}"
      com.centurylinklabs.watchtower.monitor-only: 'true'
##____________________ FileRun [CLOUD/FileRun]
  filerun:
    image: afian/filerun
    container_name: filerun
    restart: always
    networks: 
      - web-proxy
      - filerun
    environment:
      FR_DB_HOST: filerun-db
      FR_DB_PORT: 3306
      FR_DB_NAME: filerundb
      FR_DB_USER: $USERNAME
      FR_DB_PASS: $PW_INT
      APACHE_RUN_USER: $USERNAME
      APACHE_RUN_USER_ID: $PUID
      APACHE_RUN_GROUP: $USERNAME
      APACHE_RUN_GROUP_ID: $PGID
    depends_on:
      - filerun-db
      - filerun-tika
      - filerun-search
    volumes:
      - $DOCKERDIR/filerun/html:/var/www/html
      - $DATAPOOL/Users:/user-files
      # Mount shareduser folder (mnt/pool/$SHAREDUSER) containing family shared files, into the home users folders
      - $DATAPOOL/Users/$SHAREDUSER:/user-files/$USER1/$SHAREDUSER
      - $DATAPOOL/Users/$SHAREDUSER:/user-files/$USER2/$SHAREDUSER
    labels:
      caddy: files.$DOMAIN
      caddy.reverse_proxy: "{{upstreams 80}}"
      caddy.reverse_proxy.header_up: "Host files.$DOMAIN"
      # Required extra headers
      caddy.file_server: ""                                         # required for fileservers
      caddy.encode: gzip                                            # required for fileservers
      caddy.header.Strict-Transport-Security: '"max-age=15768000;"' # Recommended security hardening for fileservers
      caddy.header.X-XSS-Protection: '"1; mode=block;"'             # Recommended security hardening for fileservers
      caddy.header.X-Content-Type-Options: "nosniff"                # Seems required to open files in OnlyOffice
      caddy.header.X-Frame-Options: "SAMEORIGIN"                    # Seems required to open files in OnlyOffice
      com.centurylinklabs.watchtower.monitor-only: 'true'
##____________________ Filerun database [CLOUD/FileRun/db]
  filerun-db:
    image: mariadb:10.1
    container_name: filerun-db
    restart: always
    networks:
      - filerun
    environment:
      MYSQL_ROOT_PASSWORD: $PW_INT
      MYSQL_USER: $USER
      MYSQL_PASSWORD: $PW_INT
      MYSQL_DATABASE: filerundb
    volumes:
      - $DOCKERDIR/filerun/db:/var/lib/mysql
    labels: 
      com.centurylinklabs.watchtower.monitor-only: 'true'
##____________________ FileRun Tikaserver [CLOUD/FileRun/tika]
  filerun-tika:
    image: logicalspark/docker-tikaserver
    container_name: filerun-tika
    restart: always
    networks:
      - filerun
    labels: 
      com.centurylinklabs.watchtower.monitor-only: 'true'
##____________________ FileRun ElasticSearch [CLOUD/FileRun/search]
  filerun-search:
    image: docker.elastic.co/elasticsearch/elasticsearch:6.2.4
    container_name: filerun-search
    restart: always
    networks:
      - filerun
    environment:
      cluster.name: docker-cluster
      bootstrap.memory_lock: 'true'
      ES_JAVA_OPTS: '-Xms512m -Xmx512m'
    ulimits:
      memlock:
        soft: -1
        hard: -1
    mem_limit: 1g
    volumes:
      - $DOCKERDIR/filerun/esearch:/usr/share/elasticsearch/data
    labels: 
      com.centurylinklabs.watchtower.monitor-only: 'true'
##
##_____________________ OnlyOffice Document Server [Cloud/Office]
  onlyoffice:
    image: onlyoffice/documentserver
    container_name: onlyoffice
    stdin_open: 'true'
    restart: always
    networks: 
      - web-proxy
    tty: 'true'
    volumes:
      - $DOCKERDIR/onlyoffice/data:/var/www/onlyoffice/Data
      - $DOCKERDIR/onlyoffice/log:/var/log/onlyoffice
      - $DOCKERDIR/onlyoffice/database:/var/lib/postgresql
      - /usr/share/fonts:/usr/share/fonts
    dns: 9.9.9.9
    environment:
      JWT_ENABLED: 'true'
      JWT_SECRET: $ONLYOFFICEJWT
    labels:
      caddy: office.$DOMAIN
      caddy.reverse_proxy: "{{upstreams 80}}"
      # Required extra headers
      caddy.file_server: ""
      caddy.encode: gzip
      caddy.header.X-Content-Type-Options: "nosniff"
      com.centurylinklabs.watchtower.monitor-only: 'true'
##
##
##________MEDIA________
##_____________________ Jellyfin [MEDIA/Library] 
  jellyfin:
    container_name: jellyfin
    image: hotio/jellyfin
    restart: always
    networks: 
      - media
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
      UMASK_SET: 002 #optional
    volumes:
      - $DOCKERDIR/jellyfin/config:/config
      - $DATAPOOL/Media:/data
    ports:
      - 8096:8096
    # Required for Intel QuickSync/VAAPI hardware accelerated video encoding/transcoding
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
      - /dev/dri/card0:/dev/dri/card0
    labels: 
      com.centurylinklabs.watchtower.monitor-only: 'true'
##
##____________________ vpn-proxy [MEDIA/vpn-client-for-media]
  vpn-proxy:
    container_name: vpn-proxy
    image: thrnz/docker-wireguard-pia
    restart: always
    networks: 
      - vpn-proxy
    volumes:
      # Auth token is stored here
      - $DOCKERDIR/vpn/pia:/pia
      # If enabled, the forwarded port is dumped to /pia-shared/port.dat for potential use in other containers
      - $DOCKERDIR/vpn/pia-shared:/pia-shared
    cap_add:
      - NET_ADMIN
      #- SYS_MODULE might not be needed with a 5.6+ kernel?
      #- SYS_MODULE
      # Mounting the tun device may be necessary for userspace implementations
      #devices:
      #- /dev/net/tun:/dev/net/tun
    environment:
      LOCAL_NETWORK: 192.168.88.0/24,10.6.0.1/24
      LOC: de-frankfurt
      USER: $VPN_USER_PIA
      PASS: $VPN_PW_PIA
      #KEEPALIVE: 25
      #VPNDNS: 8.8.8.8,8.8.4.4
      PORT_FORWARDING: 1
      PORT_PERSIST: 
      #WG_USERSPACE: 1
    privileged: 'true'
    sysctls:
      # wg-quick fails to set this without --privileged, so set it here instead if needed
      - net.ipv4.conf.all.src_valid_mark=1
      # May as well disable ipv6. Should be blocked anyway.
      - net.ipv6.conf.default.disable_ipv6=1
      - net.ipv6.conf.all.disable_ipv6=1
      - net.ipv6.conf.lo.disable_ipv6=1
    # The container has no recovery logic. Use a healthcheck to catch disconnects.
    healthcheck:
      test: ping -c 1 www.google.com || exit 1
      interval: 30s
      timeout: 10s
      retries: 3
    ports:
      - 9090:8080 #Qbittorrent webUI
    labels: 
      com.centurylinklabs.watchtower.monitor-only: 'true'
##
##____________________ Transmission [MEDIA/download-client]
  qbittorrent:
    image: hotio/qbittorrent
    container_name: qbittorrent
    depends_on:
      - vpn-proxy
    network_mode: service:vpn-proxy
    restart: always
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
    volumes:
      - $DOCKERDIR/qbittorrent:/config
      - $DATAPOOL/Media/incoming:/Media/incoming
    labels: 
      com.centurylinklabs.watchtower.monitor-only: 'true'
##
##____________________ Unpackerr [MEDIA/download-unpack]
#  unpackerr:
#    container_name: unpackerr
#    image: hotio/unpackerr
#    networks: 
#      - media
#    restart: always
#    environment:
#      PUID: $PUID
#      PGID: $PGID
#      UMASK: 002
#      TZ: $TZ
#    volumes:
#      - $DOCKERDIR/unpacker/config:/config
#      - $DATAPOOL/Media:/Media
##
##____________________ Jackett [MEDIA/torrent-proxy for Sonarr&Radarr]
  jackett:
    container_name: jackett
    image: hotio/jackett
    networks: 
      - media
    depends_on:
      - qbittorrent
    restart: always
    environment:
      PUID: $PUID
      PGID: $PGID
      UMASK: 002
    volumes:
      - $DOCKERDIR/jackett/config:/config
      - $DATAPOOL/Media/incoming:/Media/incoming
    ports:
      - 9117:9117
  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    networks: 
      - media
    environment:
      - LOG_LEVEL=info
      - CAPTCHA_SOLVER=hcaptcha-solver
      #- CAPTCHA_SOLVER=harvester
      #- HARVESTER_ENDPOINT=https://127.0.0.1:5000/token
    ports:
      - 8191:8191
    restart: unless-stopped 
##
##____________________ Sonarr [MEDIA/PVR-TVshows]
  sonarr:
    container_name: sonarr
    image: hotio/sonarr
    networks: 
      - media
    depends_on:
      - qbittorrent
    restart: always
    environment:
      PUID: $PUID
      PGID: $PGID
      UMASK: 002
      TZ: $TZ
    volumes:
      - $DOCKERDIR/sonarr/config:/config
      - $DATAPOOL/Media:/Media
    ports:
      - 8989:8989
##
##____________________ Radarr [MEDIA/PVR-Movies]
  radarr:
    container_name: radarr
    image: hotio/radarr
    networks: 
      - media
    depends_on:
      - qbittorrent
    restart: always
    environment:
      PUID: $PUID
      PGID: $PGID
      UMASK: 002
      TZ: $TZ
    volumes:
      - $DOCKERDIR/radarr/config:/config
      - $DATAPOOL/Media:/Media
    ports:
      - 7878:7878
##
##____________________ Bazarr [MEDIA/subtitles]
  bazarr:
    container_name: bazarr
    image: hotio/bazarr
    networks: 
      - media
    depends_on:
       - sonarr
       - radarr
    restart: always
    environment:
      PUID: $PUID
      PGID: $PGID
      UMASK: 002
      TZ: $TZ
    volumes:
      - $DOCKERDIR/bazarr/config:/config
      - $DATAPOOL/Media:/Media
    ports:
      - 6767:6767
##
##____________________ Lidarr [MEDIA/PVR-Music]
  lidarr:
    container_name: lidarr
    image: hotio/lidarr
    networks: 
      - media
    depends_on:
      - qbittorrent
    restart: always
    environment:
      PUID: $PUID
      PGID: $PGID
      UMASK: 002
      TZ: $TZ
    volumes:
      - $DOCKERDIR/lidarr/config:/config
      - $DATAPOOL/Media:/Media
    ports:
      - 8686:8686
#
#
networks:
  management:
    driver: bridge
  web-proxy:
    driver: bridge
  filerun:
    driver: bridge
  vpn-proxy:
    driver: bridge
  media: 
    driver: bridge

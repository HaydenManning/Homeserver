## Check for typos             : docker-compose config 
## Run                         : docker-compose up -d 
## Stop all containers         : docker kill $(docker ps -q)
## Remove stopped containers   : docker container prune
## Stop & remove containers    : docker rm $(docker ps -a -q) 
## Remove everything (stopped) : sudo docker system prune --all --volumes --force
#
# CHANGELOG 2022-04-11
# UPDATED: Hotio images have a new source. 
# CHANGED: For all services, first item is container_name, second is image source.  
#
# CHANGELOG 2022-04-08
# UPDATED: Now works with all latest containers. 
# CHANGED: 'true' to true everywhere.
# CHANGED: CADDY-DOCKER-PROXY: renamed contaimer name:'caddy-proxy to 'web-proxy', its network (unchanged) has the same name. 
# CHANGED: CADDY-DOCKER-PROXY: latest version requires an env variable, this has been added.
# CHANGED: CADDY-DOCKER-PROXY: requires you to run "docker network create web-proxy" BEFORE running compose!
#  
# CHANGELOG 2021-05-15
# CHANGED: Bitwarden_rs has been renamed by the developer to Vaultwarden, renamed the image, volume path, env variable
#
# CHANGELOG 2021-05-01
# REMOVED: PULLIO notify labels. It cannot send email notifications, only Discord which I and most people I believe don't use. 
## KEPT: PULLIO update labels, for media/download related containers, to update all of them with 1 command (manually or scheduled). 
# CHANGED: Scrutiny, an attempt to disable its interval based SMART scan, so that this can be done via the NIGHTLY, script.
## REASON: It will spin up all drives just for the SMART scan. Better to do this when they are already spinning. 
# CLEANUP: Changed order of values, to have consistency for each and every container.
#
# CHANGELOG 2021-04-28
## REMOVED: Watchtower. Replaced with Pullio bash script. For a weekly update check, running a daemon like Watchtower makes no sense. 
## CHANGED: VPN-proxy back to Frankfurt, for some reason Swiss doesn't work, the server TLS certificate is outdated. 
## REPLACED IMAGE: QBittorrent image with the one from Hotio because it has unrar and doesn't create files with root-only access.
## REPLACED ALL MEDIA RELATED IMAGES: all images are now from Hotio.
## CHANGED: Scrutiny requires a yaml config file to recognise NVME drives. see my github for an example. 
## CHANGED: Ports of VPN-proxy to allow access to QBittorrent as it listens on a different port for the webUI.  
#
# CHANGELOG 2021-04-13
## ADDED Guacamole! Now you can open your browser and access the desktop of your server. The image works, still have to test Guacamole. 
## Removed Transmission as nobody seems to use it anymore, even though it had full Sonarr compatibility, it is riddled with config issues:
## temp folder will never be used with Sonarr/Radarr, making the filesystem optimisations (disabling CoW & seperate subvolume for incomplete dir)
## Completely useless, allowing fragmentation. Also, the complete dir is changed during downloading via Sonarr. Devs believe this is all normal behaviour.
## ADDED QBittorrent, not from Linuxserver as it is 360MB versus this 150MB image. 
## ToDO: Will look into using Hotio QFlood image instead, the UI is much nicer but seems to lack important settings to increase disk cache etc.
## REMOVED unneccessary port binds: 80 for Caddy is not used. Now used for Organizr to access server homepage via url (use your servers /etc/hosts file to set an url). 
## ToDO: Will look into registering https for LAN only, to access all services via https organizr url (not sure if it makes sense to go this far). 
## CHANGED: pia wireguard vpn to swiss instead of nine eyes Germany.
## NOTE: I stopped using Syncthing due to this issue (my laptop SSD filled up within 30min): https://forum.syncthing.net/t/problems-with-renamed-directory/16611
## I might try Resilio instead or see if the dev is helpful to figure out the issue, if it isn't "by design".
#
version: "2.4"
## Read the Docker Documentation! Most examples use 3.x. Docker-Compose 3.x is targeting Docker Swarm, NOT Compose. Do not use Swarm.
## Docker-Compose 2.4 is the latest version for uncomplicated Compose configuration. 
services:
##
##_____MANAGEMENT_____
##____________________ Portainer [Management/Docker]
  portainer:
    container_name: portainer
    image: portainer/portainer-ce
    restart: always
    networks: 
      - management
    command: -H unix:///var/run/docker.sock
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $DOCKERDIR/portainer/data:/data
    ports:
      - "9000:9000"
##
##_____________________ Organizr [Management/Dashboard] 
  organizr:
    container_name: organizr
    image: organizr/organizr:latest
    restart: always
    healthcheck:
      disable: true
    networks: 
      - management
    security_opt:
      - no-new-privileges:true
    volumes:
      - $DOCKERDIR/organizr:/config
    ports: 
      - 80:80
##
##____________________ Guacamole [Management/remote-desktop]
  guacamole:
    container_name: guacamole
    image: oznu/guacamole
    restart: always
    networks: 
      - management
    environment:
      EXTENSIONS: auth-quickconnect # add ,auth-totp if exposed to the internet, for 2FA
    volumes:
      - $DOCKERDIR/guacamole:/config
    ports:
     - "8000:8080"
##
##____________________ VPN-portal [Management/VPN]
  VPN-portal:
    container_name: VPN-portal
    image: h44z/wg-portal:latest
    restart: always
    healthcheck:
      disable: true
    cap_add:
      - NET_ADMIN
    network_mode: host
    environment:
      # WireGuard Settings
      WG_DEVICES: wg0
      WG_DEFAULT_DEVICE: wg0
      WG_CONFIG_PATH: /etc/wireguard
      # Core Settings
      WEBSITE_TITLE: Obelix VPN
      COMPANY_NAME: Obelix
      ADMIN_USER: $USEREMAIL
      ADMIN_PASS: $PW
      # Mail Settings
      MAIL_FROM: $RECIPIENT
      EMAIL_HOST: $SMTP
      EMAIL_PORT: $SMTPPORT
      EMAIL_USERNAME: $SMTPUSER
      EMAIL_PASSWORD: $SMTPPASS
      EMAIL_TLS: true
      EMAIL_AUTHTYPE: auth
    volumes:
      - /etc/wireguard:/etc/wireguard
      - $DOCKERDIR/vpn-portal/data:/app/data
##
##____________________ Scrutiny [Management/monitoring]
  scrutiny:
    container_name: scrutiny
    image: cr.hotio.dev/hotio/scrutiny
    restart: always
    cap_add:
      - SYS_RAWIO
      - SYS_ADMIN
    devices:
      - "/dev/nvme0n1"
      - "/dev/sda"
      - "/dev/sdb"
      - "/dev/sdc"
      - "/dev/sdd"
      - "/dev/sde" 
    networks: 
      - management
    #entrypoint: CMD
    environment:
      mode: web
      PUID: $PUID
      PGID: $PGID
      UMASK: 002
      TZ: $TZ
      API_ENDPOINT: http://scrutiny-web:8080
    volumes:
      - /run/udev:/run/udev:ro
      - $DOCKERDIR/scrutiny/config:/config
    ports:
      - "8001:8080"
##
##
##______NETWORK_______
##____________________ AdGuard Home [NETWORK/Adblocking-dnsserver]
  adguard:
    container_name: adguard-home
    image: adguard/adguardhome
    restart: always
    network_mode: host
    volumes:
       - $DOCKERDIR/adguardhome/work:/opt/adguardhome/work
       - $DOCKERDIR/adguardhome//conf:/opt/adguardhome/conf
##____________________ Unbound [NETWORK/Adblocking-dnsserver]
  unbound:
    container_name: unbound
    image: mvance/unbound:latest
    restart: always
    healthcheck:
      interval: 5m # to test the container, change to 10s. To prevent constant logfile activity, change to a few minutes
      timeout: 3s
      start_period: 5s
    networks: 
      - management  
    volumes:
      - $DOCKERDIR/unbound/forward-records.conf:/opt/unbound/etc/unbound/forward-records.conf
    ports:
      - 5335:53/tcp
      - 5335:53/udp
##____________________ Castblock [NETWORK/Adblocking-chromecast]
  castblock:
    container_name: blockcast
    image: erdnaxeli/castblock:latest
    restart: always
    network_mode: host
    cap_add: 
      - NET_ADMIN
    environment:
      DEBUG: true
      OFFSET: 1
      CATEGORIES: sponsor,interaction
      MUTE_ADS: true
##
##____________________ Unifi Controller [NETWORK/Wifi]
  unifi:
    container_name: unifi
    image: ghcr.io/linuxserver/unifi-controller
    #mac_address: d0:ca:ab:cd:ef:03
    networks: 
      - management
    environment:
      PUID: $PUID
      PGID: $PGID
      MEM_LIMIT: 512M #optional
    volumes:
      - $DOCKERDIR/unifi/config:/config
    ports:
      - 10001:10001/udp #to auto-discover your Access Points
      - 8080:8080 # Controller communication with Access Points and vice versa
      - 8443:8443 #to access webUI
      - 1900:1900/udp #to auto-discover this Controller in your app
##
##
##________CLOUD________
##_____________________ Caddy [CLOUD/web-proxy]
  caddy:
    container_name: web-proxy
    image: lucaslorentz/caddy-docker-proxy:ci-alpine
    restart: always
    networks: 
      - web-proxy
    environment:
      - CADDY_INGRESS_NETWORKS=web-proxy
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - $DOCKERDIR/caddy/caddy_data:/data
      - $DOCKERDIR/caddy/config:/config
    labels:
      caddy.email: $EMAIL
      #caddy.log.output: file /data/access.log
    ports:
      - 443:443
##
##_____________________ Firefox Sync [CLOUD/Browser] 
# generate secret.txt first see docker-config.sh
  firefox-sync:
    container_name: firefox-sync
    image: crazymax/firefox-syncserver:latest
    restart: always
    networks: 
      - web-proxy
    environment: 
      FF_SYNCSERVER_PUBLIC_URL: https://firefox.$DOMAIN
      FF_SYNCSERVER_SECRET: $FFSYNCSECRET
      FF_SYNCSERVER_FORWARDED_ALLOW_IPS: '*'
      FF_SYNCSERVER_FORCE_WSGI_ENVIRON: true
      FF_SYNCSERVER_ALLOW_NEW_USERS: false
      FF_SYNCSERVER_LOGLEVEL: debug
      FF_SYNCSERVER_ACCESSLOG: true
    volumes:
      - $DOCKERDIR/firefox-sync:/data
    labels:
      caddy: firefox.$DOMAIN
      caddy.reverse_proxy: "{{upstreams 5000}}"
##
##_____________________ Bitwarden [CLOUD/Password-manager] 
  vaultwarden:
    container_name: vaultwarden
    image: vaultwarden/server
    restart: always
    healthcheck:
      interval: 5m # to test the container, change to 10s. To prevent constant logfile activity, change to a few minutes
    networks: 
      - web-proxy
    volumes:
      - $DOCKERDIR/vaultwarden:/data
    environment:
      WEBSOCKET_ENABLED: true
      DOMAIN: vault.$DOMAIN
      SIGNUPS_ALLOWED: false
      ADMIN_TOKEN: $VAULTWARDENTOKEN
    labels:
      caddy: vault.$DOMAIN
      caddy.reverse_proxy_0: "{{upstreams 80}}"
      # Required extra headers
      caddy.encode: gzip
      caddy.header.X-XSS-Protection: '"1; mode=block;"'
      caddy.header.X-Frame-Options: "DENY"
      caddy.header.X-Content-Type-Options: "none"
      caddy.reverse_proxy_1: "/notifications/hub/negotiate {{upstreams 80}}"
      caddy.reverse_proxy_2: "/notifications/hub {{upstreams 3012}}"
##
##____________________ FileRun [CLOUD/FileRun]
  filerun:
    container_name: filerun
    image: filerun/filerun
    restart: always
    networks: 
      - web-proxy
      - filerun
    environment:
      FR_DB_HOST: filerun-db
      FR_DB_PORT: 3306
      FR_DB_NAME: filerundb
      FR_DB_USER: $USER
      FR_DB_PASS: $PW_DB
      APACHE_RUN_USER: $USER
      APACHE_RUN_USER_ID: $PUID
      APACHE_RUN_GROUP: $USER
      APACHE_RUN_GROUP_ID: $PGID
    depends_on:
      - filerun-db
    volumes:
      - $DOCKERDIR/filerun/html:/var/www/html
      - $DATAPOOL/Users:/user-files
    labels:
      caddy: files.$DOMAIN
      caddy.reverse_proxy: "{{upstreams 80}}"
      caddy.reverse_proxy.header_up: "Host files.$DOMAIN"
      # Required extra headers
      caddy.file_server: ""                                         # required for fileservers
      caddy.encode: gzip                                            # required for fileservers
      caddy.header.Strict-Transport-Security: '"max-age=15768000;"' # Recommended security hardening for fileservers
      caddy.header.X-XSS-Protection: '"1; mode=block;"'             # Recommended security hardening for fileservers
      caddy.header.X-Content-Type-Options: "nosniff"                # Seems required to open files in OnlyOffice
      caddy.header.X-Frame-Options: "SAMEORIGIN"                    # Seems required to open files in OnlyOffice
##____________________ Filerun database [CLOUD/FileRun/db]
  filerun-db:
    container_name: filerun-db
    image: mariadb:10.1
    restart: always
    networks:
      - filerun
    environment:
      MYSQL_ROOT_PASSWORD: $PW_DB
      MYSQL_USER: $USER
      MYSQL_PASSWORD: $PW_DB
      MYSQL_DATABASE: filerundb
    volumes:
      - $DOCKERDIR/filerun/db:/var/lib/mysql
##_____________________ OnlyOffice Document Server [Cloud/Office]
  onlyoffice:
    container_name: onlyoffice
    image: onlyoffice/documentserver
    stdin_open: true
    restart: always
    networks: 
      - web-proxy
    tty: true
    volumes:
      - $DOCKERDIR/onlyoffice/data:/var/www/onlyoffice/Data
      - $DOCKERDIR/onlyoffice/log:/var/log/onlyoffice
      - $DOCKERDIR/onlyoffice/database:/var/lib/postgresql
      - /usr/share/fonts:/usr/share/fonts
    dns: 9.9.9.9
    environment:
      JWT_ENABLED: true
      JWT_SECRET: $ONLYOFFICEJWT
    labels:
      caddy: office.$DOMAIN
      caddy.reverse_proxy: "{{upstreams 80}}"
      # Required extra headers
      caddy.file_server: ""
      caddy.encode: gzip
      caddy.header.X-Content-Type-Options: "nosniff"
##
##
##________MEDIA________
##_____________________ Jellyfin [MEDIA/Library] 
  jellyfin:
    container_name: jellyfin
    image: cr.hotio.dev/hotio/jellyfin
    restart: always
    networks: 
      - media
    devices:
      - /dev/dri/renderD128:/dev/dri/renderD128
      - /dev/dri/card0:/dev/dri/card0
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
      UMASK_SET: 002 #optional
    volumes:
      - $DOCKERDIR/jellyfin/config:/config
      - $DATAPOOL/Media:/data
    # Required for Intel QuickSync/VAAPI hardware accelerated video encoding/transcoding
    ports:
      - 8096:8096

##____________________ VPN-proxy [MEDIA/vpn-client-for-media]
  VPN-proxy:
    container_name: VPN-proxy
    image: thrnz/docker-wireguard-pia
    restart: always
    networks: 
      - vpn-proxy
    cap_add:
      - NET_ADMIN
      #- SYS_MODULE might not be needed with a 5.6+ kernel?
      #- SYS_MODULE
      # Mounting the tun device may be necessary for userspace implementations
      #devices:
      #- /dev/net/tun:/dev/net/tun
    privileged: true
    sysctls:
      # wg-quick fails to set this without --privileged, so set it here instead if needed
      - net.ipv4.conf.all.src_valid_mark=1
      # May as well disable ipv6. Should be blocked anyway.
      - net.ipv6.conf.default.disable_ipv6=1
      - net.ipv6.conf.all.disable_ipv6=1
      - net.ipv6.conf.lo.disable_ipv6=1
    healthcheck:
      test: ping -c 1 www.google.com || exit 1
      interval: 5m # While testing container, change to 10s. To prevent constant logfile activity, change to a few minutes
      timeout: 10s
      start_period: 10s
      retries: 3
    environment:
      LOCAL_NETWORK: 192.168.88.0/24,10.6.0.1/24
      LOC: de-frankfurt
      USER: $VPN_USER_PIA
      PASS: $VPN_PW_PIA
      #KEEPALIVE: 25
      #VPNDNS: 8.8.8.8,8.8.4.4
      PORT_FORWARDING: 1
      PORT_PERSIST: 0
      PORT_SCRIPT: /pia-shared/updateport-qbittorrent.sh
      #WG_USERSPACE: 1
    volumes:
      # Auth token is stored here
      - $DOCKERDIR/vpn-proxy/pia:/pia
      # If enabled, the forwarded port is dumped to /pia-shared/port.dat for potential use in other containers
      - $DOCKERDIR/vpn-proxy/pia-shared:/pia-shared
    # The container has no recovery logic. Use a healthcheck to catch disconnects.
    ports:
      - 9090:8080 #Qbittorrent webUI
##
##____________________ Transmission [MEDIA/download-client]
  qbittorrent:
    container_name: qbittorrent
    image: cr.hotio.dev/hotio/qbittorrent
    depends_on:
      - VPN-proxy
    network_mode: service:VPN-proxy
    restart: always
    environment:
      PUID: $PUID
      PGID: $PGID
      TZ: $TZ
    volumes:
      - $DOCKERDIR/qbittorrent:/config
      - $DATAPOOL/Media/incoming:/Media/incoming
    labels: 
      org.hotio.pullio.update: true
##
##____________________ Unpackerr [MEDIA/download-unpack]
#  unpackerr:
#    container_name: unpackerr
#    image: hotio/unpackerr
#    networks: 
#      - media
#    restart: always
#    environment:
#      PUID: $PUID
#      PGID: $PGID
#      UMASK: 002
#      TZ: $TZ
#    volumes:
#      - $DOCKERDIR/unpacker/config:/config
#      - $DATAPOOL/Media:/Media
##
##____________________ Prowlarr [MEDIA/torrent-proxy for Sonarr&Radarr]
  prowlarr:
    container_name: prowlarr
    image: cr.hotio.dev/hotio/prowlarr
    networks: 
      - media
    depends_on:
      - qbittorrent
    restart: always
    environment:
      PUID: $PUID
      PGID: $PGID
      UMASK: 002
      TZ: $TZ
    volumes:
      - $DOCKERDIR/prowlarr/config:/config
      - $DATAPOOL/Media/incoming:/Media/incoming
    ports:
      - 9696:9696
##
##____________________ Sonarr [MEDIA/PVR-TVshows]
  sonarr:
    container_name: sonarr
    image: cr.hotio.dev/hotio/sonarr
    networks: 
      - media
    depends_on:
      - prowlarr
      - qbittorrent
    restart: always
    environment:
      PUID: $PUID
      PGID: $PGID
      UMASK: 002
      TZ: $TZ
    volumes:
      - $DOCKERDIR/sonarr/config:/config
      - $DATAPOOL/Media:/Media
    ports:
      - 8989:8989
    labels: 
      org.hotio.pullio.update: true
##
##____________________ Radarr [MEDIA/PVR-Movies]
  radarr:
    container_name: radarr
    image: cr.hotio.dev/hotio/radarr
    networks: 
      - media
    depends_on:
      - prowlarr
      - qbittorrent
    restart: always
    environment:
      PUID: $PUID
      PGID: $PGID
      UMASK: 002
      TZ: $TZ
    volumes:
      - $DOCKERDIR/radarr/config:/config
      - $DATAPOOL/Media:/Media
    ports:
      - 7878:7878
    labels: 
      org.hotio.pullio.update: true
##
##____________________ Bazarr [MEDIA/subtitles]
  bazarr:
    container_name: bazarr
    image: cr.hotio.dev/hotio/bazarr
    networks: 
      - media
    depends_on:
       - sonarr
       - radarr
    restart: always
    environment:
      PUID: $PUID
      PGID: $PGID
      UMASK: 002
      TZ: $TZ
    volumes:
      - $DOCKERDIR/bazarr/config:/config
      - $DATAPOOL/Media:/Media
    ports:
      - 6767:6767
    labels: 
      org.hotio.pullio.update: true
##
##____________________ Lidarr [MEDIA/PVR-Music]
  lidarr:
    container_name: lidarr
    image: cr.hotio.dev/hotio/lidarr
    networks: 
      - media
    depends_on:
      - prowlarr
      - qbittorrent
    restart: always
    environment:
      PUID: $PUID
      PGID: $PGID
      UMASK: 002
      TZ: $TZ
    volumes:
      - $DOCKERDIR/lidarr/config:/config
      - $DATAPOOL/Media:/Media
    ports:
      - 8686:8686
    labels: 
      org.hotio.pullio.update: true
#
#
networks:
  management:
    driver: bridge
  web-proxy:
    #driver: bridge
    external: true
  filerun:
    driver: bridge
  vpn-proxy:
    driver: bridge
  media: 
    driver: bridge
